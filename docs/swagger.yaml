host: localhost:5001
info:
  contact:
    email: dallasmaxwell@outlook.com
    name: API Support
  description: Swagger API for Golang Project MiniTwit.
  license:
    name: Apache 2.0
  termsOfService: http://swagger.io/terms/
  title: MiniTwit Swagger API
  version: "1.0"
paths:
  /latest:
    get:
      summary: Get latest accpeted id
      

      responses:
        "200":
          description: returns latest accepted id by api
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LatestResponse'
  /register:
    post:
      summary: Post new user to register
      parameters:
      - name: latest
        in: query
        description: latest id sent by simulator api
        required: false
        style: form
        explode: true
        schema:
          type: integer
      requestBody:
        $ref: '#/components/requestBodies/RegisterUserBody'
      responses:
        "204":
          description: User registered
        "400":
          description: Error on insert with description
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RegisterErrorResponse'
  /msgs:
    get:
      summary: Get number of messages from system
      parameters:
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: Basic c2ltdWxhdG9yOnN1cGVyX3NhZmUh
      - name: "no"
        in: query
        description: Number of messages to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: latest
        in: query
        description: latest id sent by simulator api
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Message created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListOfMessageDTO'
  /msgs/{username}:
    get:
      summary: Find messages by username
      description: Returns messages by username
      parameters:
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: Basic c2ltdWxhdG9yOnN1cGVyX3NhZmUh
      - name: username
        in: path
        description: username of user to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: niss
      - name: "no"
        in: query
        description: pass an optional search string for looking up inventory
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: latest
        in: query
        description: latest id sent by simulator api
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOfMessageDTO'
            application/xml:
              schema:
                $ref: '#/components/schemas/LatestResponse'
        "401":
          description: Unauthorized
        "404":
          description: User not found
    post:
      summary: Find messages by username
      description: Returns messages by username
      parameters:
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: Basic c2ltdWxhdG9yOnN1cGVyX3NhZmUh
      - name: username
        in: path
        description: username of user to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: niss
      - name: latest
        in: query
        description: latest id sent by simulator api
        required: false
        style: form
        explode: true
        schema:
          type: integer
      requestBody:
        $ref: '#/components/requestBodies/MessageBody'
      responses:
        "204":
          description: successful operation
        "401":
          description: Unauthorized
        "500":
          description: Invalid username supplied
  /fllws/{username}:
    get:
      summary: Find messages by username
      description: Returns messages by username
      parameters:
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: Basic c2ltdWxhdG9yOnN1cGVyX3NhZmUh
      - name: username
        in: path
        description: username of user to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: niss
      - name: "no"
        in: query
        description: pass an optional search string for looking up inventory
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: latest
        in: query
        description: latest id sent by simulator api
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFollowersDTO'
        "401":
          description: Unauthorized
        "404":
          description: User not found
    post:
      summary: Find messages by username
      description: Returns messages by username
      parameters:
      - name: Authorization
        in: header
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: Basic c2ltdWxhdG9yOnN1cGVyX3NhZmUh
      - name: username
        in: path
        description: username of user to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: niss
      - name: latest
        in: query
        description: latest id sent by simulator api
        required: false
        style: form
        explode: true
        schema:
          type: integer
      requestBody:
        $ref: '#/components/requestBodies/FollowBody'
      responses:
        "204":
          description: successful operation
        "401":
          description: Unauthorized
        "404":
          description: User not found
swagger: "2.0"
