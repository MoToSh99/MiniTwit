{
    "swagger": "2.0",
    "info": {
        "description": "Swagger API for Golang Project MiniTwit.",
        "title": "MiniTwit Swagger API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "dallasmaxwell@outlook.com"
        },
        "license": {
            "name": "Apache 2.0"
        },
        "version": "1.0"
    },
    "host": "localhost:5001",
    "paths": {
        "/latest": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get latest accepted id",
                "responses": {
                    "200": {
                        "description": "Returns latest accepted id by api"
                    }
                }
            }
        },
        "/msgs": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get number of messages from system",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Autherization",
                        "name": "auth",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns number of messages in the system"
                    }
                }
            }
        },
        "/msgs/{username}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Find messages by username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Autherization",
                        "name": "auth",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesfull"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Post new user to register",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User registered"
                    },
                    "400": {
                        "description": "Error on insert with description"
                    }
                }
            }
        }
    }
}